<Application x:Class="SvnRadar.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:SvnRadar.FormatConverters"
    xmlns:util="clr-namespace:SvnRadar.Util"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:repoManager="clr-namespace:SvnRadar"    
    xmlns:repoCC="clr-namespace:SvnRadar.Common.Controls"            
    xmlns:database="clr-namespace:SvnRadar"
    xmlns:pf='clr-namespace:System.Windows.Data;assembly=PresentationFramework'    
    StartupUri="SvnRadar.xaml">
    <Application.Resources>

        <!-- Localized strings dictionaries merge -->
        <ResourceDictionary >
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Strings-EN.xaml" />
                <ResourceDictionary Source="Templates/ButtonTemplates.xaml" />
                <ResourceDictionary Source="ExpanderStyle.xaml"/>               
                <ResourceDictionary Source="Templates/tabcontrol.xaml"/>
                <ResourceDictionary Source="Templates/slider.xaml"/>
                <ResourceDictionary Source="Templates/button.xaml"/>                
                <ResourceDictionary Source="Templates/checkbox.xaml"/>
                <ResourceDictionary Source="Templates/listbox.xaml"/>                           
                <ResourceDictionary Source="Templates/listview.xaml"/>
                



            </ResourceDictionary.MergedDictionaries>

            <!--- Converters -->
            <converter:SliderFormatConverter x:Key="SliderFormatConverter" />
            <converter:VisibilityConverter x:Key="VisibilityConverter" />
            <converter:RepositoryItemStateConverter x:Key="RepositoryItemStateConverter" />
            <converter:ListViewItemColorConverter x:Key="ListViewItemColorConverter" />
            <converter:EnableFromItemsCountConverter x:Key="EnableFromItemsCountConverter" />
            <converter:IsFlatLayoutConverter x:Key="IsFlatLayoutConverter" />
            <converter:IsGroupLayoutConverter x:Key="IsGroupLayoutConverter" />
            <converter:BreakExecutionVisibilityConverter x:Key="BreakExecutionVisibilityConverter" />
            <converter:VisibilityReverseConverter x:Key="VisibilityReverseConverter" />



       




            <!--- Converters -->

            <repoManager:ListViewHeaderDataTemplateSelector x:Key="ListViewHeaderDataTemplateSelector"/>

            <!--- Object data provider for repo info -->
            <ObjectDataProvider ObjectType="{x:Type database:RepoInfoBase}" MethodName="GetRepoInfoList" x:Key="DataProviderForListView">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="System:String"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <!--- Object data provider for repo info -->


            <CollectionViewSource x:Key='source' Source="{Binding Source={StaticResource DataProviderForListView}}" >
                <CollectionViewSource.GroupDescriptions>
                    <!--<pf:PropertyGroupDescription PropertyName="Revision" />-->
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>

            <!--- Repo executor global object -->
            <ObjectDataProvider ObjectType="{x:Type repoManager:SvnRadarExecutor}"  x:Key="svnRadarExecutor"/>
            <!--- Repo executor global object -->

            <!--- Filter manager global object -->
            <ObjectDataProvider ObjectType="{x:Type repoManager:FilterManager}"  x:Key="filterManager"/>
            <!--- Filter manager global object -->

            <!--- Images -->
            <Image x:Key="FilerByCriteriaImage" Source="Images/filter-data-by-criteria.png"  />
            <Image x:Key="AddImage" Source="Images/new.png"/>
            <Image x:Key="DeleteIcon" Source="Images/deleted.ico"/>
            <Image x:Key="ModifiedImage" Source="Images/modified.png"/>
            <Image x:Key="ConflictedImage" Source="Images/conflicted.png"/>
            <Image x:Key="EmptyImage" Source="Images/empty.png"/>
            <Image x:Key="UpdateImage" Source="Images/updateimage.png"/>
            <Image x:Key="LogImage" Source="Images/logimage.png"/>    
            <Image x:Key="MergedImage" Source="Images/merged.png"/>
            
            <Image x:Key="PrevImage" Source="Images/prev.png"/>
            <Image x:Key="NextImage" Source="Images/next.png"/>
            <Image x:Key="ShowRevisionInfo" Source="Images/showrevision.png"/>
            <Image x:Key="FolderImage" Source="Images/folder.png"/>
            <Image x:Key="ExitIcon" Source="Images/exit.ico"/>
            <Image x:Key="ImportIcon" Source="Images/import.ico"/>
            <Image x:Key="ExportIcon" Source="Images/export.ico"/>
            <Image x:Key="AboutIcon" Source="Images/about.ico"/>
            <Image x:Key="AliasIcon" Source="Images/alias.ico"/>
            <Image x:Key="ErrorIcon" Source="Images/errornotification.ico"/>
            <Image x:Key="FolderIcon" Source="Images/Folder.ico"/>
            <!--- Images -->


           
            <!--Tool Tip -->
            <StackPanel x:Key="ToolTipPanel">
                <StackPanel Background="BurlyWood" Width="200" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" >
                    <TextBlock FontFamily="Aharoni" FontSize="12" FontWeight="Bold" Foreground="Black" 
                               TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Top"  HorizontalAlignment="Right"
                               Text="{Binding Path=Account}"
                               Width="143"/>

                </StackPanel>

                <StackPanel Width="200" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" >
                    <TextBlock TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" Background="{x:Null}" 
                               HorizontalAlignment="Right" VerticalAlignment="Top" Width="181" Text="{Binding Path=UserComment}"/>

                </StackPanel>

            </StackPanel>
            <!--Tool Tip -->

            <!--Group view Tool Tip -->
            <StackPanel x:Key="ToolTipPanelForGroupView">
                <StackPanel Background="BurlyWood" Width="200" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" >
                    <TextBlock FontFamily="Aharoni" FontSize="12" FontWeight="Bold" Foreground="Black" 
                               TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Top"  HorizontalAlignment="Right"
                               Text="{Binding Path=Items[0].Account}"
                               Width="143"/>
                </StackPanel>

                <StackPanel Width="200" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" >
                    <TextBlock TextWrapping="Wrap" Foreground="Black" TextAlignment="Left" Background="{x:Null}" 
                               HorizontalAlignment="Right" VerticalAlignment="Top" Width="181" Text="{Binding Path=Items[0].UserComment}"/>
                </StackPanel>

            </StackPanel>
            <!--Group view Tool Tip -->

            <!-- Context menu on sys tray -->
            <ContextMenu  x:Key="ListViewItemContextMenu" >
                <MenuItem  Header="{StaticResource MI_SHOWREVISIONINFO}" Click="ShowRevisionInfo_Click" Icon="{StaticResource ShowRevisionInfo}" />
                <!--<MenuItem  Header="{StaticResource MI_UPDATEONYTHISFILE}" Click="UpdateOnlyThisFile_Click" />-->
                
            </ContextMenu>

            <!-- Context menu on sys tray -->

            <!---ListView State header template definition -->
            <DataTemplate x:Key="ListViewStateHeaderNormalTemplate" >
                <StackPanel x:Name="NormalStackPanel" Width="{Binding RelativeSource=
                                                        {RelativeSource FindAncestor, 
                                                        AncestorType={x:Type GridViewColumnHeader}}, 
                                                        Path=ActualWidth}" >
                    <TextBlock  Text="{Binding}" TextAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Center"/>
                </StackPanel>
            </DataTemplate>
            <!---ListView State header template definition -->

            <!---ListView Normal header template definition -->
            <DataTemplate x:Key="ListViewHeaderNormalTemplate" >

                <StackPanel x:Name="NormalStackPanel" Width="{Binding RelativeSource=
                                                        {RelativeSource FindAncestor, 
                                                        AncestorType={x:Type GridViewColumnHeader}}, 
                                                        Path=ActualWidth}" >
                    <TextBlock   x:Name="tblock"  Text="{Binding}" VerticalAlignment="Center"  HorizontalAlignment="Center" TextAlignment="Center" />
                </StackPanel>

            </DataTemplate>
            <!---ListView Normal header template definition -->

            <!---ListView Filtered header template definition -->
            <DataTemplate x:Key="ListViewHeaderFilteredTemplate">
                <StackPanel  x:Name="FilteredStackPanel" Orientation="Horizontal" Background="BlanchedAlmond"  HorizontalAlignment="Stretch" >

                    <Button x:Name="RemoveFilterButton" Width="20" Click="RemoveFilterButton_Click" Tag="{Binding}">
                        <Image Source="Images/deleted.ico"/>
                    </Button>
                    <TextBox   x:Name="tbox" Tag="{Binding}"  
                               VerticalAlignment="Center" TextChanged="tbox_TextChanged"  Width="{Binding RelativeSource=
                                                        {RelativeSource FindAncestor, 
                                                        AncestorType={x:Type GridViewColumnHeader}}, 
                                                        Path=ActualWidth}"                                                                                   
                                                        TextAlignment="Left" FontFamily="Arial"   FontSize="12"/>
                    

                </StackPanel>
            </DataTemplate>
            <!---ListView Filtered header template definition -->


            <!---ListView State column cells  template definition -->
            <DataTemplate x:Key="StateColumnCellTemplate">

                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <Image  Grid.Column="0"  HorizontalAlignment="Center"
                          Source="{Binding Path=State, 
                            Converter={StaticResource RepositoryItemStateConverter}}" 
                                Width="15"
                                   Height="15" ToolTip="{Binding Path=StateDescription}"/>
                </Grid>
            </DataTemplate>
            <!---ListView State column cells  template definition -->


            <!--- Gradien brushes for splitter -->
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="panelBackgroundBrush">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#FFE3EFFF" Offset="0" />
                    <GradientStop Color="#FFAFD2FF" Offset="1" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <!--- Gradien brushes for splitter -->



            <!-- Style for LitView item-->
            <Style x:Key="ListViewItemsStyle" TargetType="{x:Type ListViewItem}">

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Revision, Converter={StaticResource ListViewItemColorConverter} }" Value="true">
                        <Setter Property="Background" Value="White" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Revision, Converter={StaticResource ListViewItemColorConverter} }" Value="false">
                        <Setter Property="Background" Value="WhiteSmoke" />
                    </DataTrigger>

                    <Trigger Property="IsSelected" Value="true">
                        <Setter Property="Background" Value="Green" />
                        <Setter Property="Foreground" Value="WhiteSmoke" />
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="Green" />
                        <Setter Property="Foreground" Value="WhiteSmoke" />
                    </Trigger>

                </Style.Triggers>

                <EventSetter Event="MouseDoubleClick" Handler="ListViewItemDoubleClick"/>
                <Setter Property="IsSelected" Value="{Binding IsSelectedInfo, Mode=TwoWay}"/>
                <!--<Setter Property="ToolTip" Value="{Binding Path=UserComment}"/>-->
                <Setter Property="ToolTip" Value="{StaticResource ToolTipPanel}"/>
                



            </Style>
            <!-- Style for LitView item-->


            <DataTemplate x:Key="TabItemDataTemplate">


                <Grid HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch" Name="templateGrid" >

                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"></RowDefinition>
                        <!--<RowDefinition Height="6" ></RowDefinition>
                            <RowDefinition Height="6.0*" ></RowDefinition>-->
                        <!--<RowDefinition Height="*" ></RowDefinition>-->
                        <RowDefinition Height="*" ></RowDefinition>
                    </Grid.RowDefinitions>

                    <ListView x:Name="repoView" Grid.Row="0" 
                                        VerticalAlignment="Stretch"
                                        VirtualizingStackPanel.IsVirtualizing="True"
                                        VirtualizingStackPanel.VirtualizationMode="Recycling"                              
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch" 
                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"                                         
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        ScrollViewer.CanContentScroll="True"                                        
                                        GridViewColumnHeader.Click="repoView_Click"                                  
                                        SelectionMode="Single"      
                                        Style="{StaticResource ListViewCustomStyle}"
                                        ContextMenu="{StaticResource ListViewItemContextMenu}"
                                        Loaded="repoView_Loaded"                                                    
                                        ItemsSource="{Binding Source={StaticResource source}}"                                        
                                        ItemContainerStyle="{StaticResource ListViewItemsStyle}">
                        
                        
                        
                        <ListView.GroupStyle>
                            <GroupStyle>

                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Margin" Value="5,5,5,5"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                              
                                                   
                                                    <!--ToolTip="{Binding Path=Items[0].UserComment}"-->
                                                    <Expander IsExpanded="False" Style="{StaticResource GroupExpanderStyle}" ToolTip="{StaticResource ToolTipPanelForGroupView}">
                                                        <!--<Expander IsExpanded="False" BorderBrush="LightGray" ToolTip="{Binding Path=Items[0].UserComment}">-->
                                                            <Expander.Header>
                                                            <DockPanel HorizontalAlignment="Stretch" >
                                                                <TextBlock  Text="       " />
                                                                <TextBlock  Text="{Binding Path=Items[0].Revision}"  TextAlignment="Left" Width="{Binding Path=ActualWidth, ElementName=RevisionColumn}"  >
                                                                  
                                                                </TextBlock>
                                                                <TextBlock  Text="{Binding Path=Items[0].Account}" TextAlignment="Right" Width="{Binding Path=ActualWidth, ElementName=AccountColumn}"/>
                                                                <TextBlock  Text="{Binding Path=Items[0].Date}" TextAlignment="Right" Width="{Binding Path=ActualWidth, ElementName=DateColumn}" />

                                                                <TextBlock  FontWeight="Bold" Text="{Binding Path=Items.Count}" TextAlignment="Center" Width="{Binding Path=ActualWidth, ElementName=DateColumn}" />

                                                            </DockPanel>
                                                        </Expander.Header>    
                                                        <Expander.Content>
                                                            <ItemsPresenter />
                                                        </Expander.Content>
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                        </ListView.GroupStyle>

                        <ListView.View>
                            <GridView>


                                <util:FixWidthListViewColumn x:Name="StateColumn" FixedWidth="50"    Header="{StaticResource STATE_NAME}"                                                   
                                                    HeaderTemplate="{StaticResource ListViewStateHeaderNormalTemplate}" 
                                                    CellTemplate="{StaticResource StateColumnCellTemplate}"/>

                                <util:CustomColumn x:Name="RevisionColumn"   Header="{StaticResource REVISION_NAME}" DisplayMemberBinding="{Binding Path=Revision}" Width="150" HeaderTemplateSelector="{StaticResource ListViewHeaderDataTemplateSelector}" />
                                <util:CustomColumn x:Name="AccountColumn" Header="{StaticResource ACCOUNT_NAME}" DisplayMemberBinding="{Binding Path=Account}" Width="150" HeaderTemplateSelector="{StaticResource ListViewHeaderDataTemplateSelector}"/>
                                <util:CustomColumn x:Name="DateColumn" Header="{StaticResource DATE_NAME}" DisplayMemberBinding="{Binding Path=Date}" Width="250" HeaderTemplateSelector="{StaticResource ListViewHeaderDataTemplateSelector}"/>
                                <util:CustomColumn x:Name="ItemColumn" Header="{StaticResource ITEM_NAME}" DisplayMemberBinding="{Binding Path=Item}" Width="450"  HeaderTemplateSelector="{StaticResource ListViewHeaderDataTemplateSelector}"/>
                              

                            </GridView>
                        </ListView.View>




                    </ListView>


                        <!-- Buttons  Template="{StaticResource SimpleButtonStyle}"-->
                    
                    <Button Style="{StaticResource SimpleButtonStyle}" x:Name="rbRepository"   Grid.Row="2"  Width="160" Height="26"  FontSize="12"   Content="{StaticResource  RepositoryTitle}" HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="10,0,0,0" Command="repoManager:AppCommands.GetRepoInfoCommand" />
                    <Button Style="{StaticResource SimpleButtonStyle}" x:Name="rbUpdateRepository"   Grid.Row="2"  Width="200" Height="26"  FontSize="12" Content="{StaticResource  UpdateAllTitle}" HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="180,0,0,0" Command="repoManager:AppCommands.UpdateRepositoryCommand" />
                    <Button Style="{StaticResource BlockButtonStyle}" x:Name="rbBreakExecution"   Grid.Row="2"  Width="160" Height="26" FontSize="12"  Content="{StaticResource  BreakExecutionTitle}" Background="#FFAD1D07" Foreground="WhiteSmoke" HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="450,0,0,0" 
                                  Visibility="{Binding Source={StaticResource svnRadarExecutor}, Path=ExecutingCommand, Mode=OneWay,  Converter={StaticResource BreakExecutionVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" Command="repoManager:AppCommands.BreakLogLoadingCommand" />

                    <!--<Button Style="{StaticResource SimpleButtonStyle}" x:Name="rbOpenWorkingCopy"   Grid.Row="2"  Width="26" Height="26" FontSize="12" HorizontalAlignment="Right"  
                            VerticalAlignment="Center"  Margin="600,0,10,0" 
                            Visibility="{Binding Source={StaticResource svnRadarExecutor}, Path=ExecutingCommand, 
                            Mode=OneWay,  Converter={StaticResource VisibilityReverseConverter}, UpdateSourceTrigger=PropertyChanged}" 
                            Command="repoManager:AppCommands.OpenWorkingCopyLocationCommand"  Content="{StaticResource FolderImage}" />-->

                    <!-- Buttons  -->


                    <ProgressBar x:Name="checkRepositoryProgress" Grid.Row="2" Width="200" Height="22" HorizontalAlignment="Right"    
                                 VerticalAlignment="Center" Margin="600,0,10,0" IsIndeterminate="True" 
                                 Visibility="{Binding Source={StaticResource svnRadarExecutor}, Path=ExecutingCommand, Mode=OneWay,  Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>



                </Grid>

             
            </DataTemplate>



        </ResourceDictionary>

    </Application.Resources>

</Application>
